drop table if exists users cascade;
create table users (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       email varchar(254) NOT NULL,
       name varchar(250) NOT NULL UNIQUE,
       constraint pk_user primary key (id)
);

drop table if exists locations cascade;
create table locations (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       lat numeric(8,6),
       lon numeric(9,6),
       constraint pk_location primary key (id)
);

drop table if exists categories cascade;
create table categories (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       name varchar(50) NOT NULL,
       constraint pk_category primary key (id)
);

drop table if exists compilations cascade;
create table compilations (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       pinned boolean NOT NULL,
       title varchar(255) NOT NULL,
       constraint pk_comp primary key (id)
);

drop table if exists events cascade;
create table events (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       annotation varchar(2000) NOT NULL,
       confirmed_requests bigint DEFAULT 0,
       created_on timestamp without time zone,
       description varchar(7000) NOT NULL,
       event_date timestamp without time zone NOT NULL,
       paid boolean NOT NULL,
       participant_limit int,
       published_on varchar(50),
       request_moderation boolean,
       state varchar(50),
       title varchar(120) NOT NULL,
       views bigint,
       category bigint references categories(id),
       initiator bigint references users(id),
       location bigint references locations(id),
       constraint pk_event primary key (id)
);

       create index ind_initiator on events (initiator);

drop table if exists requests cascade;
create table requests (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       created timestamp without time zone,
       event bigint references events(id),
       requester bigint references users(id),
       status varchar(255),
       constraint pk_request primary key (id)
);

drop table if exists comp_events cascade;
 create table comp_events (
      comp_id bigint references compilations(id),
      event_id bigint references events(id)
);