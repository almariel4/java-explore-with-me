drop type if exists stateAction cascade;
create type stateAction as enum ('SEND_TO_REVIEW', 'CANCEL_REVIEW');

drop type if exists eventStatus cascade;
create type eventStatus as enum ('CONFIRMED', 'REJECTED');

drop type if exists eventStateAdmin cascade;
create type eventStateAdmin as enum ('PUBLISH_EVENT', 'REJECT_EVENT');

drop table if exists users cascade;
create table users (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       email varchar(128) NOT NULL,
       name varchar(128) NOT NULL,
       constraint pk_user primary key (id)
);

drop table if exists locations cascade;
create table locations (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       lat numeric(8,6),
       lon numeric(9,6),
       constraint pk_location primary key (id)
);

drop table if exists categories cascade;
create table categories (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       name varchar(50) UNIQUE NOT NULL,
       constraint pk_category primary key (id),
       constraint uq_cat_name unique(name)
);

drop table if exists compilations cascade;
create table compilations (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       pinned boolean NOT NULL,
       title varchar(255) NOT NULL,
       constraint pk_comp primary key (id)
);

drop table if exists events cascade;
create table events (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       annotation varchar(500) NOT NULL,
       confirmedRequests bigint,
       createdOn timestamp without time zone,
       description varchar(1000),
       eventDate timestamp without time zone NOT NULL,
       paid boolean NOT NULL,
       participantLimit int,
       publishedOn varchar(19),
       requestModeration boolean,
       state stateAction,
       title varchar(128) NOT NULL,
       views bigint,
       category bigint references categories(id),
       initiator bigint references users(id),
       location bigint references locations(id),
       constraint pk_event primary key (id)
);

drop table if exists requests cascade;
create table requests (
       id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
       created timestamp without time zone,
       event bigint references events(id),
       requester bigint references users(id),
       status eventStatus
);